# Папка, в которой должна быть выполнена команда ...

# Команда для Windows:
python -m venv venv
# Нет, нет, мы не опечатались, первый 'venv' — это часть команды (имя модуля),
# которая указывает, что нужно создать виртуальное окружение.
# А второй 'venv' — это имя для этого окружения.

# Команда для Linux и macOS:
python3 -m venv venv

# Python, запусти модуль venv, он установит виртуальное окружение.
# Назови это виртуальное окружение "venv".
# Имя можно задать любое, мы в примерах будем использовать "venv". 

# Папка, в которой должна быть выполнена команда ...

# Команда для Windows:
python -m venv venv
# Нет, нет, мы не опечатались, первый 'venv' — это часть команды (имя модуля),
# которая указывает, что нужно создать виртуальное окружение.
# А второй 'venv' — это имя для этого окружения.

# Команда для Linux и macOS:
python3 -m venv venv

# Python, запусти модуль venv, он установит виртуальное окружение.
# Назови это виртуальное окружение "venv".
# Имя можно задать любое, мы в примерах будем использовать "venv". 

Поделиться виртуальным окружением
Представьте, что у вас есть готовый проект, и вам нужно передать его коллегам.
Количество устанавливаемых библиотек и пакетов за время разработки может сильно разрастись. 
Просто передать директорию venv/ проекта — не самый хороший вариант. Директория может быть достаточно «тяжёлой». 
И что самое неприятное — на разных операционных системах библиотеки могут работать некорректно или не работать вообще.
Чтобы таких проблем не было, нужно передавать проект вместе с конкретными версиями библиотек. 
В виртуальном окружении проекта first_project выполните команду:
(venv)...$ pip freeze > requirements.txt 
По этой команде пакетный менеджер в директории проекта создаст файл requirements.txt, его ещё называют «файл зависимостей». 
В этот файл будут построчно записаны имена пакетов и библиотек с указанием их версий: всё, что вы устанавливали в виртуальное окружение проекта. 

В команде указан символ > — он используется для переключения потоков вывода. 
Без этого знака и последующего имени файла, результат выполнения команды будет выведен в терминал, но вам нужно сохранить названия библиотек в файл. 
Поэтому мы и переключаем вывод по умолчанию на запись в него с указанным именем.

Чтобы смоделировать установку пакетов из файла requrements.txt, удалите текущее виртуальное окружение — введите в терминал две команды:
# Деактивировать текущее окружение.
deactivate
# Удалить директорию окружения.
rm -r venv 

Теперь создайте новое виртуальное окружение и активируйте его.

После того как активируете новое виртуальное окружение, выполните команду:
pip install -r requirements.txt 
Пакетный менеджер построчно считает файл зависимостей и установит указанные в нём библиотеки.